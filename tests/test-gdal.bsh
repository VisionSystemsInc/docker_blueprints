#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../../.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${VSI_COMMON_DIR}/tests/test_utils.bsh"

: ${DOCKER=docker}

if ! command -v "${DOCKER}" &> /dev/null; then
  skip_next_test
fi
begin_test "GDAL"
(
  setup_test

  DOCKER_IMAGE="vsiri/blueprint_test:test_gdal"

  # PROJ version
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'proj 2>&1')"
  assert_sub_str "${RESULT}" "Rel. 9.4.1, June 1st, 2024"

  # pyproj version
  RESULT="$(docker run --rm ${DOCKER_IMAGE} python -c 'import pyproj; print(pyproj.__version__)')"
  assert_str_eq "${RESULT}" "3.7.0"

  # command line GDAL version
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'gdalinfo --version')"
  assert_str_eq "${RESULT}" "GDAL 3.10.3, released 2025/04/01"

  # python GDAL version
  RESULT="$(docker run --rm ${DOCKER_IMAGE} python -c 'from osgeo import gdal; print(gdal.__version__)')"
  assert_str_eq "${RESULT}" "3.10.3"

  # test python import (for example, gdal_array may fail to import if numpy is not installed)
  docker run --rm ${DOCKER_IMAGE} python -c 'from osgeo import gdal, ogr, osr, gdal_array, gdalconst'

  # test for expected `ldd libproj.so` results
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'ldd /usr/local/lib/libproj.so | grep /usr/local')"
  assert_sub_str "${RESULT}" "libsqlite3.so"
  assert_sub_str "${RESULT}" "libtiff.so"

  # test for expected `ldd libgdal.so` results
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'ldd /usr/local/lib64/libgdal.so | grep /usr/local')"
  assert_sub_str "${RESULT}" "libgeos.so"
  assert_sub_str "${RESULT}" "libgeos_c.so"
  assert_sub_str "${RESULT}" "libgeotiff.so"
  assert_sub_str "${RESULT}" "libopenjp2.so"
  assert_sub_str "${RESULT}" "libproj.so"
  assert_sub_str "${RESULT}" "libsqlite3.so"
  assert_sub_str "${RESULT}" "libtiff.so"

)
end_test

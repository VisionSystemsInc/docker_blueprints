#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../../.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"

: ${DOCKER=docker}

if ! command -v "${DOCKER}" &> /dev/null; then
  skip_next_test
fi
begin_test "GDAL"
(
  setup_test

  DOCKER_IMAGE="vsiri/blueprint_test:test_gdal"

  # command line GDAL version
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'gdalinfo --version')"
  [ "${RESULT}" = 'GDAL 3.6.4, released 2023/04/17' ]

  # python GDAL version
  RESULT="$(docker run --rm ${DOCKER_IMAGE} python -c 'from osgeo import gdal; print(gdal.__version__)')"
  [ "${RESULT}" = '3.6.4' ]

  # test python import (for example, gdal_array may fail to import if numpy is not installed)
  docker run --rm ${DOCKER_IMAGE} python -c 'from osgeo import gdal, ogr, osr, gdal_array, gdalconst'

  # test for expected LDD results
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'ldd /usr/local/lib64/libgdal.so | grep /usr/local')"
  [[ ${RESULT} == */usr/local/lib64/libgeos.so* ]]
  [[ ${RESULT} == */usr/local/lib64/libgeos_c.so* ]]
  [[ ${RESULT} == */usr/local/lib/libgeotiff.so* ]]
  [[ ${RESULT} == */usr/local/lib/libopenjp2.so* ]]
  [[ ${RESULT} == */usr/local/lib/libproj.so* ]]
  [[ ${RESULT} == */usr/local/lib/libtiff.so* ]]

)
end_test

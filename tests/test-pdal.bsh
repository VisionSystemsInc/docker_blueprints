#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../../.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${VSI_COMMON_DIR}/tests/test_utils.bsh"

: ${DOCKER=docker}

if ! command -v "${DOCKER}" &> /dev/null; then
  skip_next_test
fi
begin_test "PDAL"
(
  setup_test

  DOCKER_IMAGE="vsiri/blueprint_test:test_pdal"

  # command line PDAL version
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'pdal --version' | sed -n 2p)"
  assert_str_eq "${RESULT}" "pdal 2.8.3 (git-version: Release)"

  # python PDAL version
  RESULT="$(docker run --rm ${DOCKER_IMAGE} python -c 'import pdal; print(pdal.info.version)')"
  assert_str_eq "${RESULT}" "2.8.3"

  # command line GDAL version
  # Note this version is purposefully different from the default blueprint_gdal
  # GDAL_VERSION to ensure the chained blueprints honor all version ARGs
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'gdalinfo --version')"
  assert_str_eq "${RESULT}" "GDAL 3.10.3, released 2025/04/01"

  # test for expected LDD results
  RESULT="$(docker run --rm ${DOCKER_IMAGE} bash -c 'ldd /usr/local/lib64/libpdalcpp.so | grep /usr/local')"
  assert_sub_str "${RESULT}" "libgdal.so"
  assert_sub_str "${RESULT}" "libgeos.so"
  assert_sub_str "${RESULT}" "libgeos_c.so"
  assert_sub_str "${RESULT}" "libgeotiff.so"
  assert_sub_str "${RESULT}" "libopenjp2.so"
  assert_sub_str "${RESULT}" "libproj.so"
  assert_sub_str "${RESULT}" "libtiff.so"

)
end_test

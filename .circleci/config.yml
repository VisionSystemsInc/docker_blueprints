version: 2.1


# -----
# generic yaml anchors
# -----
x-references:

  build_config: &build_config
    docker:
      - image: cimg/python:3.8
    shell: /bin/bash -eo pipefail
    working_directory: ~/vsi
    environment:
      VSI_COMMON_DIR: /home/circleci/vsi
      BLUEPRINT_DIR: /home/circleci/vsi/docker/blueprints


# -----
# circleci custom commands
# -----
commands:

  # checkout submodules
  build_setup:
    description: Build setup
    steps:

      - run:
          name: Checkout vsi_common
          command: |
            git clone --recursive https://github.com/VisionSystemsInc/vsi_common.git "${VSI_COMMON_DIR}"
            git checkout ci_cache_from
            rm -rf "${BLUEPRINT_DIR}"

      - checkout:
          path: "docker/blueprints"

      - run:
          name: Setup
          command: |

            # install additional software
            pip3 install pyyaml

            # login to dockerhub
            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"

            # push from main repo, main or ${JUST_CI_BRANCH_PUSH} branches
            CI_LOAD_PUSH_OPT="--no-push"
            if [ "${CIRCLE_PROJECT_USERNAME,,}" == "visionsystemsinc" ]; then
                if [ "${CIRCLE_BRANCH}" == "main" ] || [ "${CIRCLE_BRANCH}" == "${JUST_CI_BRANCH_PUSH-}" ]; then
                  CI_LOAD_PUSH_OPT=""
                fi
            fi

            # permanently add common options to BASH_ENV
            cat \<<EOF >> "${BASH_ENV}"

            BLUEPRINT_VERSION=${CI_BLUEPRINT_VERSION-}

            BLUEPRINT_COMPOSE_FILE="${BLUEPRINT_DIR}/docker-compose.yml"
            BLUEPRINT_CACHE_REPO="vsiri/ci_cache_blueprints"

            TEST_COMPOSE_FILE="${BLUEPRINT_DIR}/tests/docker-compose.yml"
            TEST_CACHE_REPO="vsiri/ci_cache_blueprint_tests"

            CI_LOAD="python3 ${VSI_COMMON_DIR}/linux/ci_load.py"

            CI_LOAD_OPTIONS=(
                ${BLUEPRINT_VERSION:+ --cache-version "${BLUEPRINT_VERSION}"}
                "--quiet-pull"
                "--print-build"
                "--print-push-pull"
                ${CI_LOAD_PUSH_OPT:+${CI_LOAD_PUSH_OPT}}
                "--recipe-repo IGNORE"
            )
            EOF

            # display bash_env
            cat "${BASH_ENV}"

      - setup_remote_docker


# -----
# CircleCI jobs
# -----
jobs:

  build_blueprints:
    <<: *build_config
    steps:
      - build_setup

      - run:
          name: Build blueprints (ci_load)
          command: |

            # discover services
            SERVICES=( $(docker-compose -f "${BLUEPRINT_COMPOSE_FILE}" config --services) )

            # ci_load for each blueprint
            for service in "${SERVICES[@]}"; do
              ${CI_LOAD} \
                --cache-repo "${BLUEPRINT_CACHE_REPO}" \
                ${CI_LOAD_OPTIONS[*]} \
                "${BLUEPRINT_COMPOSE_FILE}" "${service}"
            done

      - run:
          name: List docker images
          command: |
            docker images | awk 'NR == 1; NR > 1 {print $0 | "sort -k2"}'


  build_tests:
    <<: *build_config
    steps:
      - build_setup

      - run:
          name: Build tests (ci_load)
          command: |

            set -x

            # named services
            SERVICES=( gdal_3_2_3 pdal_2_2_0 )

            # ci_load for each service
            for service in "${SERVICES[@]}"; do
              blueprint="${service%%_*}"
              blueprint_cache="${BLUEPRINT_CACHE_REPO}:${BLUEPRINT_VERSION:+${BLUEPRINT_VERSION}_}${blueprint}"

              ${CI_LOAD} \
                --cache-repo "${TEST_CACHE_REPO}" \
                --other-repos "${blueprint_cache}" \
                ${CI_LOAD_OPTIONS[*]} \
                "${TEST_COMPOSE_FILE}" "${service}"
            done

      - run:
          name: Build test services (ci_load)
          command: |

            # named services
            SERVICES=( test_gdal test_pdal )

            # ci_load for each service
            for service in "${SERVICES[@]}"; do
              ${CI_LOAD} \
                --cache-repo "${TEST_CACHE_REPO}" \
                ${CI_LOAD_OPTIONS[*]} \
                "${TEST_COMPOSE_FILE}" "${service}"
            done

      - run:
          name: Run integration tests
          command: |
            source setup.env
            # just test blueprint
            TESTLIB_DISCOVERY_DIR="${BLUEPRINT_DIR}" vsi_test_env "${VSI_COMMON_DIR}/tests/run_tests"


# -----
# CircleCI workflows
# -----
workflows:
  build_and_test:
    jobs:
      - build_blueprints
      - build_tests:
          requires:
            - build_blueprints

version: 2.1

# -----
# CircleCI orbs
# -----
orbs:
  win: circleci/windows@2.4.0

# -----
# CircleCI custom commands
# -----
commands:

  # run "ci_load" command on user-selected docker-compose file
  # - cache is updated only from master branch of main repo (not forks)
  # - assumes python3 with pyyaml is already available
  # - assumes docker login was successful
  # - required environment variables:
  #     $VSI_COMMON_DIR - location of vsi_common repo
  # - optional enviromment variables
  #     $CI_BLUEPRINT_VERSION - version string for cache (default "")
  #     $JUST_CI_BRANCH_PUSH - branch (besides master) for dockerhub push
  # - each service identified in the docker-compose file will be separately
  #   built via "${VSI_COMMON_DIR}/linux/ci_load.py"
  ci_load:
    description: Build dockers (ci_load)
    parameters:
      step_name:
        description: Step name
        type: string
        default: Build blueprints (ci_load)
      compose_file:
        description: docker-compose file
        type: string
    steps:
      - run:
          name: << parameters.step_name >>
          command: |

            set -x

            # common variables
            COMPOSE_FILE="<< parameters.compose_file >>"

            # cache repos for tests vs. blueprints
            if [[ "${COMPOSE_FILE}" == */tests/* ]]; then
              CACHE_REPO="vsiri/ci_cache_blueprint_tests"
              OTHER_REPOS="vsiri/ci_cache_blueprints"
            else
              CACHE_REPO="vsiri/ci_cache_blueprints"
              OTHER_REPOS=
            fi

            # ci_load for each service
            SERVICES=( $(docker-compose -f "${COMPOSE_FILE}" config --services) )

            for SERVICE in "${SERVICES[@]}"; do
              python3 "${VSI_COMMON_DIR}/linux/ci_load.py" \
                --recipe-repo "IGNORE" \
                --cache-repo ${CACHE_REPO} \
                ${OTHER_REPOS:+--other-repos ${OTHER_REPOS}} \
                ${CI_LOAD_OPTIONS[*]} \
                "${COMPOSE_FILE}" "${SERVICE}"
            done

# -----
# CircleCI jobs
# -----
jobs:

  # linux docker environment
  build_and_test:
    docker:
      - image: cimg/python:3.8
    shell: /bin/bash -eo pipefail
    working_directory: ~/vsi
    environment:
      VSI_COMMON_DIR: /home/circleci/vsi
      BLUEPRINT_DIR: /home/circleci/vsi/docker/blueprints

    steps:

      - run:
          name: Checkout vsi_common
          command: |
            git clone --recursive https://github.com/VisionSystemsInc/vsi_common.git "${VSI_COMMON_DIR}"
            git checkout ci_cache_from
            rm -rf "${BLUEPRINT_DIR}"

      - checkout:
          path: "docker/blueprints"

      - run:
          name: Setup
          command: |

            # install additional software
            pip3 install pyyaml

            # login to dockerhub
            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"

            # push from main repo, main or ${JUST_CI_BRANCH_PUSH} branches
            CI_LOAD_PUSH_OPT="--no-push"
            if [ "${CIRCLE_PROJECT_USERNAME,,}" == "visionsystemsinc" ]; then
               if [ "${CIRCLE_BRANCH}" == "main" ] || [ "${CIRCLE_BRANCH}" == "${JUST_CI_BRANCH_PUSH-}" ]; then
                 CI_LOAD_PUSH_OPT=""
               fi
            fi

            # blueprint version
            : ${CI_BLUEPRINT_VERSION=}

            # common options
            CI_LOAD_OPTIONS=(
              ${CI_BLUEPRINT_VERSION:+--cache-version "${CI_BLUEPRINT_VERSION}"}
              "--quiet-pull"
              "--print-build"
              "--print-push-pull"
              ${CI_LOAD_PUSH_OPT:+${CI_LOAD_PUSH_OPT}}
            )

            # add common options to local environment
            cat \<<EOF > local.env
            CI_LOAD="python3 ${VSI_COMMON_DIR}/linux/ci_load.py"
            CI_LOAD_OPTIONS=(
                ${CI_BLUEPRINT_VERSION:+ --cache-version "${CI_BLUEPRINT_VERSION}"}
                "--quiet-pull"
                "--print-build"
                "--print-push-pull"
                ${CI_LOAD_PUSH_OPT:+${CI_LOAD_PUSH_OPT}}
            )
            EOF

            # report local.env
            cat local.env

      - setup_remote_docker

      - run:
          name: Build blueprints (ci_load)
          command: |

            # activate just environment
            source setup.env

            # additional variables
            COMPOSE_FILE="${BLUEPRINT_DIR}/docker-compose.yml"
            CACHE_REPO="vsiri/ci_cache_blueprints"

            # discover services
            SERVICES=( $(docker-compose -f "${BLUEPRINT_COMPOSE_FILE}" config --services) )

            # ci_load for each blueprint
            for service in "${SERVICES[@]}"; do
              just --wrap ${CI_LOAD} \
                --recipe-repo "IGNORE" \
                --cache-repo "${CACHE_REPO}" \
                ${CI_LOAD_OPTIONS[*]} \
                "${COMPOSE_FILE}" "${service}"
            done

      - run:
          name: List docker images
          command: |
            docker images | awk 'NR == 1; NR > 1 {print $0 | "sort -k2"}'

      # - run:
      #     name: Build test blueprints (ci_load)
      #     command: |

      #       # activate just environment
      #       source setup.env

      #       # discover 


      # - run:
      #     name: Build test services (ci_load)
      #     command: |

      #       source setup.env


      # - ci_load:
      #     step_name: Build tests (ci_load)
      #     compose_file: ${BLUEPRINT_DIR}/tests/docker-compose.yml

      # - run:
      #     name: Run integration tests
      #     command: |
      #       source setup.env
      #       # just test blueprint
      #       TESTLIB_DISCOVERY_DIR="${BLUEPRINT_DIR}" vsi_test_env "${VSI_COMMON_DIR}/tests/run_tests"


# -----
# CircleCI workflows
# -----
workflows:
  blueprints:
    jobs:
      - build_and_test
